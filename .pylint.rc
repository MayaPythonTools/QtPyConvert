[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS

# Pickle collected data for later comparisons.
persistent=yes

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=


[MESSAGES CONTROL]

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time. See also the "--disable" option for examples.
#enable=

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"

#
# yes, i could just turn off all warnings, but there are actually a number of warnings
# i want to treat as errors.  so, pick them off as they come up from this critical
# level.
#
# W0105: pointless-string-statement
# F0401: import-error
# C0111: missing-docstring
# R0201: no-self-use
# C0301: line-too-long
# C0103: invalid-name
# W0511: fixme
# W0613: unused-argument
# R0914: too-many-locals
# W0142: star-args
# R0904: too-many-public-methods
# R0902: too-many-instance-attributes
# W0702: bare-except
# W0401: wildcard-import
# W0603: global-statement
# W0201: attribute-defined-outside-init
# W0212: protected-access
# W0703: broad-except
# R0915: too-many-statements
# C0302: too-many-lines
# E1103: maybe-no-member
# R0922: abstract-class-little-used
# R0901: too-many-ancestors
# R0913: too-many-arguments
# R0921: abstract-class-not-used
# R0911: too-many-return-statements
# R0912: too-many-branches
# W0701: raising-string (for some gnarly storing of exceptions and re-raising)
#
# FIXME:
#
# C0321: multiple-statements
# W0223: abstract-method
# C0131: DD-shebang
# C0132: DD-copyright
disable=RP0001,RP0002,RP0003,RP0101,RP0701,RP0401,RP0402,W0105,F0401,R0201,W0511,R0914,W0142,R0904,R0902,W0401,W0603,W0201,W0212,R0915,redefined-variable-type,duplicate-code,wrong-import-order,wrong-import-position,too-many-arguments,using-constant-test,locally-disabled,too-many-nested-blocks,invalid-name,cyclic-import

# DD boilerplate, spacing:
#C0326,C0132,C0131,C0303


[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells whether to display a full report or only the messages
reports=yes

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
#msg-template=


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the beginning of the name of dummy variables
# (i.e. not used).
dummy-variables-rgx=_|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=


[BASIC]

# List of builtins function names that should not be used, separated by a comma
bad-functions=apply,input

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
#const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$
# module-level names aren't constants
const-rgx=(([a-zA-Z_][a-zA-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct class names
class-rgx=[A-Z][A-Za-z0-9]{2,40}$

# Regular expression which should only match correct function names
function-rgx=[_]{0,2}[a-z][A-Za-z0-9]{2,40}$

# Regular expression which should only match correct method names
method-rgx=[_]{0,2}[a-z][A-Za-z0-9]{2,40}|(__.*__)$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{2,40}$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,40}$

# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,40}$

# Regular expression which should only match correct attribute names in class
# bodies
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,40}|(__.*__))$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[a-z_][a-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,r,g,b,a,c,m,u,v,x,y,z,ex,ec,ev,tb,ns,lm,p,of,f,fp,sg

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,foobar,baz

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=__.*__|visit.*

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
ignored-classes=SQLObject

# ignored modules.  ignore the dcc module.  PyQt4 is also giving us issues (?)
ignored-modules=maya,hou,nuke,PyTrackCore,PyQt4,PyQt4.QtGui,PyQt4.QtCore

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed. Python regular
# expressions are accepted.
generated-members=REQUEST,acl_users,aq_parent


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=100

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$
# TODO: we want to allow paths in here, at least for test side;
# TODO: they are like urls, we don't want these broken

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt=no

# List of optional constructs for which whitespace checking is disabled
no-space-check=trailing-comma,dict-separator

# Maximum number of lines in a module
max-module-lines=2000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='    '


[CLASSES]


# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=


[DESIGN]

# Maximum number of arguments for function / method
max-args=7

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=40

# Maximum number of statements in function / method body
max-statements=100

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=12

# Minimum number of public methods for a class (see R0903).
min-public-methods=0

# Maximum number of public methods for a class (see R0904).
max-public-methods=40


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
